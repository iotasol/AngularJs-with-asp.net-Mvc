@{
    ViewBag.Title = "Home Page";
}
@section featured {
    <section class="featured">
        <div class="content-wrapper">
            <hgroup class="title">
                <h1>@ViewBag.Title.</h1>
                <h2>@ViewBag.Message</h2>
            </hgroup>
            <p>
               This aplication talks about basic data binding and retrieving of data, and introduces AngularJS walking through some core Angular features like Directives, Modules, Services and $Resource Provider.
            </p>
        </div>
    </section>
}
<h3>AngularJs with MVC:</h3>
<p>Angular JS is (yet another) client side MVC framework in JavaScript that has caught the imagination of the web world in recent times. It was created by a group of developers at Google when they realized that their project (Feedback) had become too unwieldy and needed a cleanup. The three weeks effort at that cleanup lay seed to what is now known as AngularJS. Of course AngularJS was thrown open to community and since then has garnered a vibrant community and a boat load of features.</p>

<p>Among things that make AngularJS popular is its focus on testability by having principles of Dependency Injection and Inversion of control built into the framework.</p>

<p>Today we will look at AngularJS in a plain vanilla ASP.NET MVC app. We’ll start with an empty project and go ground up. We will start with basic data binding and retrieving of data, then walk through other core Angular features like directives and routing.</p>
</ol>
